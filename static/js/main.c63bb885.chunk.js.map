{"version":3,"sources":["api/request.ts","api/starShips.ts","components/starShip/StarShip.tsx","components/starShipsList/StarShipsList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["request","url","fetch","then","response","json","getStarShips","numberOfPage","StarShip","starShip","Card","className","CardBody","CardTitle","tag","title","name","CardSubtitle","model","CardText","starshipClass","hyperdriveRating","passengers","manufacturer","StarShipsList","starShips","map","id","App","useState","page","setPage","setStarShips","isLoading","setIsLoading","isLastPage","setIsLastPage","useEffect","result","next","results","starShipsFromServer","setTimeout","preperedStarships","uuidv4","starship_class","hyperdrive_rating","Button","type","onClick","prevPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAGeA,EAHC,SAACC,GAAD,OAAiBC,MAAMD,GACpCE,MAAK,SAACC,GAAD,OAAcA,EAASC,WCKhBC,EAFM,SAACC,GAAD,OAA0BP,EAAQ,GAAD,OAFpC,0CAEoC,OAAgBO,K,+DCQzDC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvC,cAACC,EAAA,EAAD,CAAMC,UAAU,uBAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,IAAI,KACJH,UAAU,aACVI,MAAON,EAASO,KAHlB,SAKGP,EAASO,OAEZ,cAACC,EAAA,EAAD,CACEH,IAAI,KACJH,UAAU,6BACVI,MAAON,EAASS,MAHlB,SAKGT,EAASS,QAEZ,cAACC,EAAA,EAAD,CACER,UAAU,aACVI,MAAON,EAASW,cAFlB,SAIGX,EAASW,gBAEZ,cAACD,EAAA,EAAD,CACER,UAAU,aACVI,MAAON,EAASY,iBAFlB,SAIGZ,EAASY,mBAEZ,cAACF,EAAA,EAAD,CACEJ,MAAON,EAASa,WAChBX,UAAU,aAFZ,SAIGF,EAASa,aAEZ,cAACH,EAAA,EAAD,CACEJ,MAAON,EAASc,aAChBZ,UAAU,aAFZ,SAIGF,EAASc,qBC1CLC,G,MAAiC,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAC5C,qBAAKd,UAAU,aAAf,SAEIc,EAAUC,KAAI,SAACjB,GAAD,OACZ,cAAC,WAAD,UACE,cAAC,EAAD,CAAUA,SAAUA,KADPA,EAASkB,WCiEjBC,EArEO,WACpB,MAAwBC,mBAAiB,GAAzC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,mBAA8B,IAAhE,mBAAOJ,EAAP,KAAkBO,EAAlB,KACA,EAAkCH,oBAAkB,GAApD,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAoCL,oBAAkB,GAAtD,mBAAOM,EAAP,KAAmBC,EAAnB,KAgCA,OA9BAC,qBAAU,WACRH,GAAa,GACb5B,EAAawB,GAAM3B,MAAK,SAACmC,GAOvB,OANKA,EAAOC,MACVH,GAAc,GAEZE,EAAOC,MACTH,GAAc,GAETE,EAAOE,WAEbrC,MAAK,SAACsC,GACLC,YAAW,WACT,IAAMC,EAAoBF,EACvBf,KAAuB,SAACjB,GAAD,MAAe,CACrCkB,GAAIiB,cACJ5B,KAAMP,EAASO,KACfE,MAAOT,EAASS,MAChBE,cAAeX,EAASoC,eACxBxB,iBAAkBZ,EAASqC,kBAC3BxB,WAAYb,EAASa,WACrBC,aAAcd,EAASc,iBAG3BS,EAAaW,GACbT,GAAa,KACZ,UAEN,CAACJ,IAGF,sBAAKnB,UAAU,MAAf,UACE,4CACCmB,GAAQ,GACP,cAACiB,EAAA,EAAD,CACEpC,UAAU,SACVqC,KAAK,SACLC,QAAS,kBAAMlB,GAAQ,SAACmB,GAAD,OAAeA,EAAW,MAHnD,kBAQDf,GACC,cAACY,EAAA,EAAD,CACEpC,UAAU,SACVqC,KAAK,SACLC,QAAS,kBAAMlB,GAAQ,SAACmB,GAAD,OAAeA,EAAW,MAHnD,kBAQDjB,EAEG,8BACE,6CAGF,cAAC,EAAD,CAAeR,UAAWA,QCxDrB0B,G,MAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAEnB,IADLmD,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.c63bb885.chunk.js","sourcesContent":["const request = (url: string) => fetch(url)\n  .then((response) => response.json());\n\nexport default request;\n","import request from './request';\n\nconst SWAPI_URL = 'https://swapi.dev/api/starships/?page=';\n\nconst getStarShips = (numberOfPage: number) => request(`${SWAPI_URL}${numberOfPage}`);\n\nexport default getStarShips;\n","import React from 'react';\nimport {\n  Card, CardText, CardBody,\n  CardTitle, CardSubtitle,\n} from 'reactstrap';\nimport { PrepearedStarShip } from '../../interfaces';\nimport './StarShip.scss';\n\ninterface Props {\n  starShip: PrepearedStarShip;\n}\n\nexport const StarShip: React.FC<Props> = ({ starShip }) => (\n  <Card className=\"star-ship__card card\">\n    <CardBody>\n      <CardTitle\n        tag=\"h5\"\n        className=\"card__text\"\n        title={starShip.name}\n      >\n        {starShip.name}\n      </CardTitle>\n      <CardSubtitle\n        tag=\"h6\"\n        className=\"mb-2 text-muted card__text\"\n        title={starShip.model}\n      >\n        {starShip.model}\n      </CardSubtitle>\n      <CardText\n        className=\"card__text\"\n        title={starShip.starshipClass}\n      >\n        {starShip.starshipClass}\n      </CardText>\n      <CardText\n        className=\"card__text\"\n        title={starShip.hyperdriveRating}\n      >\n        {starShip.hyperdriveRating}\n      </CardText>\n      <CardText\n        title={starShip.passengers}\n        className=\"card__text\"\n      >\n        {starShip.passengers}\n      </CardText>\n      <CardText\n        title={starShip.manufacturer}\n        className=\"card__text\"\n      >\n        {starShip.manufacturer}\n      </CardText>\n    </CardBody>\n  </Card>\n);\n","import React, { Fragment } from 'react';\nimport { PrepearedStarShip } from '../../interfaces';\nimport { StarShip } from '../starShip/StarShip';\nimport './StarShips.scss';\n\ninterface Props {\n  starShips: PrepearedStarShip[];\n}\n\nexport const StarShipsList: React.FC<Props> = ({ starShips }) => (\n  <div className=\"star-ships\">\n    {\n      starShips.map((starShip) => (\n        <Fragment key={starShip.id}>\n          <StarShip starShip={starShip} />\n        </Fragment>\n      ))\n    }\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'reactstrap';\nimport getStarShips from './api/starShips';\nimport './App.scss';\nimport { StarShipsList } from './components/starShipsList/StarShipsList';\nimport { PrepearedStarShip, StarShipFromServer } from './interfaces';\n\nconst App: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n  const [starShips, setStarShips] = useState<PrepearedStarShip[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isLastPage, setIsLastPage] = useState<boolean>(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getStarShips(page).then((result) => {\n      if (!result.next) {\n        setIsLastPage(false);\n      }\n      if (result.next) {\n        setIsLastPage(true);\n      }\n      return result.results;\n    })\n      .then((starShipsFromServer: StarShipFromServer[]) => {\n        setTimeout(() => {\n          const preperedStarships = starShipsFromServer\n            .map<PrepearedStarShip>((starShip) => ({\n              id: uuidv4(),\n              name: starShip.name,\n              model: starShip.model,\n              starshipClass: starShip.starship_class,\n              hyperdriveRating: starShip.hyperdrive_rating,\n              passengers: starShip.passengers,\n              manufacturer: starShip.manufacturer,\n            }));\n\n          setStarShips(preperedStarships);\n          setIsLoading(false);\n        }, 1000);\n      });\n  }, [page]);\n\n  return (\n    <div className=\"App\">\n      <h1>StarShips:</h1>\n      {page >= 2 && (\n        <Button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setPage((prevPage) => (prevPage - 1))}\n        >\n          Prev\n        </Button>\n      )}\n      {isLastPage && (\n        <Button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setPage((prevPage) => (prevPage + 1))}\n        >\n          Next\n        </Button>\n      )}\n      {isLoading\n        ? (\n          <div>\n            <p>Loading...</p>\n          </div>\n        ) : (\n          <StarShipsList starShips={starShips} />\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// eslint-disable-next-line import/extensions\nimport App from './App';\nimport './index.scss';\n\n// eslint-disable-next-line import/extensions\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}